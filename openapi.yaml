openapi: 3.0.0
info:
  title: OnBase Document API
  description: Wrapper API of Hyland RESTful OnBase Document API
  version: v2
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/express-api-skeleton
servers:
  - url: https://api.oregonstate.edu/v2
security:
  - OAuth2:
      - full
paths:
  /onbase-docs/documents:
    post:
      summary: Upload document
      tags:
        - documents
      description: Upload document
      operationId: postDocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                uploadedDocument:
                  type: string
                  format: binary
                documentTypeId:
                  type: string
                  description: The Id of the document type to store the document into
                  example: '1234'
                fileTypeId:
                  type: string
                  description: The Id of the file Type for the document
                  example: '1234'
              required:
                 - uploadedDocument
                 - documentTypeId
              additionalProperties: false
      responses:
        '201':
          description: Document uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /onbase-docs/documents/{documentId}/keywords:
    patch:
      summary: Sets all keyword values for an indexed document
      tags:
        - documents
        - keywords
      description: Sets all keyword values for an indexed document. Existing values will be replaced with the supplied list of keyword values grouped by keyword type group and keyword type.
      operationId: patchDocumentKeywords
      parameters:
        - name: documentId
          in: path
          description: The unique identifier of a document
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Instance data for keywords on a document
              properties:
                keywords:
                  type: array
                  items:
                    properties:
                      keywordTypeId:
                        type: string
                        description: The unique identifier of the keyword type for this keyword value
                        example: '123'
                      values:
                        type: array
                        description: A List of keyword values that contain various formats of the keyword value
                        items:
                          type: string
                          example: '123456789'
                    required:
                      - keywordTypeId
                      - values
                    additionalProperties: false
      responses:
        '200':
          description: Document keyword updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentKeywordsResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.oregonstate.edu/oauth2/token
          scopes:
            full: Full access to the API
  parameters:
    pageNumber:
      name: page[number]
      in: query
      required: false
      description: Page number of results
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: page[size]
      in: query
      required: false
      description: Number of results to return
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 25
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
  schemas:
    SelfLink:
      properties:
        self:
          type: string
          format: uri
          description: Self-link of current resource
    DocumentResource:
      properties:
        id:
          type: string
          description: The unique identifier of a document
        type:
          type: string
          enum:
            - document
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          type: object
          properties:
            fileSize:
              type: number
              format: integer
              description: Size of the file in bytes
              example: 1000
            fileExtension:
              type: string
              description: Extension of the file being uploaded
              example: 'pdf'
            documentTypeId:
              type: string
              description: The Id of the document type to store the document into
              example: '1234'
            fileTypeId:
              type: string
              description: The Id of the file Type for the document
              example: '16'
    DocumentKeywordsResource:
      properties:
        id:
          type: string
          description: The unique identifier of a document keywords. It's as same as the document ID
        type:
          type: string
          enum:
            - keywords
        links:
          $ref: '#/components/schemas/SelfLink'
        attributes:
          type: object
          properties:
            keywords:
              type: array
              items:
                properties:
                  keywordTypeId:
                    type: string
                    description: The unique identifier of the keyword type for this keyword value
                    example: '123'
                  values:
                    type: array
                    description: A List of keyword values that contain various formats of the keyword value
                    items:
                      type: string
                      example: '123456789'
    DocumentResult:
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/DocumentResource'
    DocumentKeywordsResult:
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/DocumentKeywordsResource'
    ErrorObject:
      properties:
        status:
          type: string
          description: HTTP status code
          example: '123'
        title:
          type: string
          description: A short, user readable summary of the error
          example: Not Found
        code:
          type: string
          description: An application-specific error code
          example: '1234'
        detail:
          type: string
          description: A long description of the error that may contain instance-specific
            details
        links:
          properties:
            about:
              type: string
              format: uri
              description: A link to further information about the error
              example: https://developer.oregonstate.edu/documentation/error-reference#1234
    ErrorResult:
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorObject'
