openapi: 3.0.0
info:
  title: OnBase Documents API
  description: API for OnBase documents
  version: v1
  license:
    name: GNU Affero General Public License Version 3
    url: http://www.gnu.org/licenses/agpl-3.0.en.html
  contact:
    name: IS Data Architecture Team
    url: https://is.oregonstate.edu/data-architecture
    email: isdataarchitecture@oregonstate.edu
externalDocs:
  description: GitHub Repository
  url: https://github.com/osu-mist/onbase-docs-api
servers:
  - url: https://api.oregonstate.edu/v1
security:
  - OAuth2:
      - full
paths:
  /documents:
    get:
      summary: Get documents
      tags:
        - documents
      operationId: getDocuments
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - in: query
          name: filter[indexKey]
          description: Search documents by index key
          required: false
          schema:
            type: string
        - in: query
          name: filter[typeGroup]
          description: Search documents by type group
          required: false
          schema:
            type: string
        - in: query
          name: filter[startDocId]
          description: Search documents by startDocId
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful GET request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSetResult'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create a new document
      tags:
        - documents
      operationId: postDocument
      requestBody:
        $ref: '#/components/requestBodies/DocumentPostBody'
      responses:
        '201':
          description: Successful creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
        '409':
          $ref: '#/components/responses/409Post'
        '500':
          $ref: '#/components/responses/500'
  '/documents/{id}':
    get:
      summary: Get a single document
      tags:
        - documents
      operationId: getDocumentById
      parameters:
        - $ref: '#/components/parameters/documentId'
      responses:
        '200':
          description: Successful GET request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    patch:
      summary: Update an existing document
      tags:
        - documents
      operationId: patchDocumentById
      parameters:
        - $ref: '#/components/parameters/documentId'
      requestBody:
        $ref: '#/components/requestBodies/DocumentPatchBody'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResult'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409Patch'
        '500':
          $ref: '#/components/responses/500'
  '/documents/{id}/file':
    get:
      summary: Get a document's file
      tags:
        - documents
      operationId: getFileByDocumentId
      parameters:
        - $ref: '#/components/parameters/documentId'
      responses:
        '200':
          description: Successful file request
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://api.oregonstate.edu/oauth2/token'
          scopes:
            full: Full access to the API
  parameters:
    pageNumber:
      name: 'page[number]'
      in: query
      required: false
      description: Page number of results
      schema:
        type: integer
        minimum: 1
        default: 1
    pageSize:
      name: 'page[size]'
      in: query
      required: false
      description: Number of results to return
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 25
    documentId:
      name: id
      in: path
      description: The ID of a document
      required: true
      schema:
        type: string
  requestBodies:
    DocumentPostBody:
      required: true
      content:
        multipart/form-data:
          schema:
            allOf:
              - type: object
                required:
                  - documentFile
                properties:
                  documentFile:
                    type: string
                    format: binary
              - type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DocumentPostResource'
                additionalProperties: false
    DocumentPatchBody:
      description: REPLACEME
      required: true
      content:
        multipart/form-data:
          schema:
            allOf:
              - type: object
                properties:
                  documentFile:
                    type: string
                    format: binary
              - type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/DocumentPatchResource'
                additionalProperties: false
  responses:
    '400':
      description: Bad request
      content: &ref_0
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResult'
    '404':
      description: Resource not found
      content: *ref_0
    '500':
      description: Internal server error
      content: *ref_0
    204Delete:
      description: The resource was successfully deleted
    204RelationshipUpdate:
      description: The relationship(s) already match the requested state
    409Post:
      description: >-
        The request body resource object's type was invalid or, if a client-generated ID was used, a
        resource already exists with this id
      content: *ref_0
    409Patch:
      description: >-
        The request body resource object had an invalid type, invalid ID, or violated a uniqueness
        constraint
      content: *ref_0
  schemas:
    SelfLink:
      type: object
      properties:
        self:
          type: string
          format: uri
          description: Self-link of current resource
    Meta:
      properties:
        totalResults:
          type: integer
          description: Total number of results
          example: 10
        totalPages:
          type: integer
          description: Total number of pages
          example: 10
        currentPageNumber:
          type: integer
          description: Page number of the returned results
          example: 1
        currentPageSize:
          type: integer
          description: Number of results per page
          example: 25
    PaginationLinks:
      properties:
        first:
          type: string
          format: uri
          description: The first page of data
        last:
          type: string
          format: uri
          description: The last page of data
        prev:
          type: string
          format: uri
          description: The previous page of data
        next:
          type: string
          format: uri
          description: The next page of data
    ErrorObject:
      type: object
      properties:
        status:
          type: string
          description: HTTP status code
          example: '123'
        title:
          type: string
          description: 'A short, user readable summary of the error'
          example: Not Found
        code:
          type: string
          description: An application-specific error code
          example: '1234'
        detail:
          type: string
          description: A long description of the error that may contain instance-specific details
        links:
          type: object
          properties:
            about:
              type: string
              format: uri
              description: A link to further information about the error
              example: 'https://developer.oregonstate.edu/documentation/error-reference#1234'
    ErrorResult:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorObject'
    DocumentId:
      type: string
      description: Unique ID of document resource
    DocumentType:
      type: string
      enum:
        - document
    DocumentAttributes:
      type: object
      properties:
        createdBy:
          type: integer
          format: int64
        dateStored:
          type: string
        documentDate:
          type: string
        documentType:
          type: string
        status:
          type: string
        name:
          type: string
        id:
          type: integer
          format: int64
        latestAllowedRevisionId:
          type: integer
          format: int64
        defaultFileType:
          type: string
        keywords:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
      additionalProperties: false
    DocumentGetResource:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        id:
          $ref: '#/components/schemas/DocumentId'
        attributes:
          $ref: '#/components/schemas/DocumentAttributes'
        links:
          $ref: '#/components/schemas/SelfLink'
      additionalProperties: false
    DocumentPostResource:
      type: object
      required:
        - type
        - attributes
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        attributes:
          type: object
          allOf:
            - type: object
              required:
                - createdBy
                - dateStored
                - documentDate
                - documentType
                - status
                - name
                - id
                - latestAllowedRevisionId
                - defaultFileType
                - keywords
            - $ref: '#/components/schemas/DocumentAttributes'
      additionalProperties: false
    DocumentPatchResource:
      type: object
      required:
        - type
        - id
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        id:
          $ref: '#/components/schemas/DocumentId'
        attributes:
          $ref: '#/components/schemas/DocumentAttributes'
      additionalProperties: false
    DocumentResult:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/SelfLink'
        data:
          $ref: '#/components/schemas/DocumentGetResource'
    DocumentSetResult:
      type: object
      properties:
        links:
          type: object
          allOf:
            - $ref: '#/components/schemas/SelfLink'
            - $ref: '#/components/schemas/PaginationLinks'
        meta:
          $ref: '#/components/schemas/Meta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/DocumentGetResource'
